#!/bin/bash

echo "Usage: path_to_fasta_file db_name db_user"

# program arguments
input_fasta_path=$1
database_name=$2
database_user=$3

# path of file to be generated by pangolin
pangolin_output_dir=$(dirname "$input_fasta_path")
pangolin_output_file_name='lineages_pangolin_output.csv'
pangolin_output_file_path="${pangolin_output_dir}/${pangolin_output_file_name}"

# script to load lineages into DB
load_lineages_sql_file_path=~/virusurf_downloader/sql_scripts/load_lineages.sql

# define utility function
check_exit_code() {    # expects exit status code as argument
  if [ "$1" -ne 0 ]; then
    echo "* Last command terminated abnormally (exit code ${1}). Script interrupted." | tee -a $log_file_path
    echo "" | tee -a $log_file_path
    echo "" | tee -a $log_file_path
    echo "" | tee -a $log_file_path
    exit
  fi
}


#Install pangolin (https://github.com/cov-lineages/pangolin#install-pangolin):

echo "Running pangolin on file ${input_fasta_path}. Output will be saved in file ${pangolin_output_file_path}"
source ~/miniconda3/etc/profile.d/conda.sh  # finds command conda
check_exit_code "$?"
conda activate pangolin
##"USAGE: bash pangoline_script.sh input.fasta outputDir outputFile"
pangolin "$input_fasta_path" -o "$pangolin_output_dir" --outfile "$pangolin_output_file_name"
check_exit_code "$?"



echo "Loading lineages file ${pangolin_output_file_path} into the database ${database_name} with user ${database_user}"
# set path of lineages CSV into SQL script
python find_n_replace_in_file.py $load_lineages_sql_file_path pathtocsvfile "$pangolin_output_file_path"
check_exit_code "$?"
## run SQL script
psql -h localhost -U "$database_user" -d "$database_name" -f $load_lineages_sql_file_path
check_exit_code "$?"
# restore SQL script
python find_n_replace_in_file.py $load_lineages_sql_file_path "$pangolin_output_file_path" pathtocsvfile
check_exit_code "$?"
echo "Done"

